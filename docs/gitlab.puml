@startuml
skinparam componentStyle rectangle
skinparam SequenceMessageAlign center
skinparam ParticipantPadding 20
skinparam SequenceNumbering asDecimal

== Сценарий GitLab Webhook – New MR ==

participant GitLab
participant GitBotSender
participant "Mattermost API" as MAPI

GitLab -> GitBotSender: POST /gitlab/webhook/mr_info
GitBotSender -> DB: getCfgGitlab Info
DB --> GitBotSender: CfgGitlab Info

alt !exist && mr.IsDraft Новый MR сразу в драфте - не создаём пост

else alt exist && mr.IsDraft
    GitBotSender -> DB: Проставляем что МР в драфте, перестаем пинговать

else alt exist && !mr.IsDraft && post.IsDraft
    GitBotSender -> DB: Указываем что МР больше не в драфте, начинаем учитывать SLA
    GitBotSender -> MAPI: CreatePost("MR вышел из состояния драфта, можно смотреть")

else
    alt config_gitlab.requires_qa_review == true
        GitBotSender -> MAPI: CreatePost("New MR ... Нужен @qa (config_gitlab.qa_reviewers)")
    else
        GitBotSender -> MAPI: CreatePost("New MR ...")
    end
    GitBotSender -> DB: CreatePostGitMR(...)
end
MAPI --> GitBotSender: post_id
GitBotSender --> DB: post_id

newpage
== Сценарий GitLab Webhook – Close MR ==

participant GitLab
participant GitBotSender
participant "Mattermost API" as MAPI

GitLab -> GitBotSender: POST /gitlab/webhook/mr_info
GitBotSender -> DB: getCfgGitlab Info
DB --> GitBotSender: CfgGitlab Info
GitBotSender -> DB: get_post
DB --> GitBotSender: post
GitBotSender -> MAPI: CreatePost("MR Closed ...")
GitBotSender -> DB: delete_post

newpage
== Сценарий GitLab Webhook – Merge MR ==

participant GitLab
participant GitBotSender
participant DB
participant "Mattermost API" as MAPI

GitLab -> GitBotSender: POST /gitlab/webhook/mr_info
GitBotSender --> DB: get_post
DB --> GitBotSender: post
GitBotSender -> DB: get_project_config
DB --> GitBotSender: project_config
alt config_gitlab.push_qa_after_review == true
    GitBotSender -> MAPI: CreatePost("MR Merged ... @qa (config_gitlab.qa_reviewers)")
else
    GitBotSender -> MAPI: CreatePost("MR Merged ...")
end
GitBotSender -> DB: delete_post

newpage
== Сценарий повторного пуша ==

participant GitBotSender
database   DB
participant "Mattermost API" as MAPI

GitBotSender -> DB: get_git_mr_posts без пуша
DB --> GitBotSender: posts
note right of DB
  Забирает все посты о МР с is_raft=false
end note
GitBotSender -> DB: get_project_config
DB --> GitBotSender: project_config

loop для каждого post
alt ageSinceCreate < sla || post.PushedReview
        note right: либо SLA ещё не истёк, либо уже был повторный пуш — пропустить
    else
        GitBotSender -> MAPI: CreatePost("МР не продвинулся, не забывайте посмотреть", post.PostID)
        MAPI --> GitBotSender: post_id
        GitBotSender -> DB: Проставляем что пинганули и обновляем updated_at
    end
end


newpage
== Сценарий повторного дневного пинга в рабочий день пн–пт ==

participant GitBotSender
database DB
participant "Mattermost API" as MAPI

note right of GitBotSender
  По расписанию:
  Пн–Пт в 14:00 MSK
end note

GitBotSender -> DB: get_git_mr_posts
DB --> GitBotSender: posts
note right of DB
  Забирает все посты о МР с is_raft=false
end note

GitBotSender -> DB: get_git_config
DB --> GitBotSender: git_config

loop для каждого post
    alt если сегодня день создания MR — пропустить

    else
        GitBotSender -> MAPI: пинг ревьюеров
        MAPI --> GitBotSender: post_id
        GitBotSender -> DB: Обновляем updated_at
    end
end

@enduml